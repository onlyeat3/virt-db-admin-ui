on:
  push:
    branches:
      - main
      - "release/**"

name: Build and Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Zip the Build
        run: |
          pwd
          ls -al
          sudo zip dist.zip -r dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist.zip
          path: |
            dist.zip

  release:
    name: Create Github Release
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: ./artifacts
      - name: Display structure of downloaded files
        run: ls -alh && file dist.zip
        working-directory: ./artifacts

      - name: Get Tag Name
        id: tag_name
        run: echo "::set-output name=tag_name::$(a=$(git rev-parse --abbrev-ref HEAD) && echo ${a/#release\/})"
      - name: Duplicate Release With Asset to public_Repo
        id: Release-AIO
        uses: Hs1r1us/Release-AIO@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ steps.tag_name.outputs.tag_name }}
          release_name: ${{ steps.tag_name.outputs.tag_name }}
          body: Release ${{ steps.tag_name.outputs.tag_name }}
          draft: false
          prerelease: false
          asset_files: "./artifacts"
